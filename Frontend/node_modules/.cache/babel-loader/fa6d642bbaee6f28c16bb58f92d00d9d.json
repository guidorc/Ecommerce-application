{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guido\\\\Desktop\\\\Git\\\\e-commerce-site\\\\Frontend\\\\src\\\\Catalogo.jsx\";\nimport React, { Component } from \"react\";\nimport Producto from \"./ProductoEnCatálogo\";\nimport cartId from \"./cartId\";\n\nclass Catalogo extends Component {\n  constructor(props) {\n    // llamar al constructor de la superclase\n    super(props); // Inicializar el estado\n\n    this.componentDidMount = async () => {\n      if (!this.state.catalogoCargado) {\n        /* Obtener el Catálogo de Libros */\n        var response = await fetch(\"http://localhost:8080/catalog\", {\n          method: \"GET\"\n        });\n        this.setState({\n          catalogoCargado: true\n        });\n        /* Actualizar la lista de productos */\n\n        var catalogo = await response.json();\n\n        for (let i = 0; i < catalogo.lenght; i++) {\n          catalogo[i].cantidadEnCatalogo = 0;\n        }\n\n        this.setState({\n          productos: catalogo\n        });\n      }\n    };\n\n    this.handleIncrement = producto => {\n      let nuevosProductos = [...this.state.productos];\n      let indice = nuevosProductos.indexOf(producto);\n      nuevosProductos[indice].cantidadEnCatalogo += 1;\n      this.setState({\n        productos: nuevosProductos\n      });\n    };\n\n    this.handleDecrement = producto => {\n      let nuevosProductos = [...this.state.productos];\n      let indice = nuevosProductos.indexOf(producto);\n      let cantidadActual = nuevosProductos[indice].cantidadEnCatalogo;\n      cantidadActual--;\n      nuevosProductos[indice].cantidadEnCatalogo = Math.max(0, cantidadActual);\n      this.setState({\n        productos: nuevosProductos\n      });\n    };\n\n    this.onAddClick = async producto => {\n      /* Agregar el producto al carrito del usuario */\n      var response = await fetch(`http://localhost:8080/addToCart?cartId=${cartId.id}&bookIsbn=${producto.titulo}&bookQuantity=${producto.cantidadEnCatalogo}`, {\n        method: \"GET\"\n      });\n\n      if (response.ok) {\n        window.alert(\"El elemento fué agregado con éxito!\");\n        let nuevosProductos = [...this.state.productos];\n        let indice = nuevosProductos.indexOf(producto);\n        nuevosProductos[indice].cantidadEnCatalogo = 0;\n        this.setState({\n          productos: nuevosProductos\n        });\n      } else {\n        window.alert(\"El elemento no pudo agregarse al carrito.\");\n      }\n    };\n\n    this.state = {\n      productos: [],\n      catalogoCargado: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"Cat\\xE1logo\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, this.state.productos.map(prod => {\n      return /*#__PURE__*/React.createElement(Producto, {\n        key: prod.id,\n        producto: prod,\n        onIncrement: this.handleIncrement,\n        onDecrement: this.handleDecrement,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary\"\n        /* Paso el parámetro así por ser un evento */\n        ,\n        onClick: () => this.onAddClick(prod),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, \"A\\xF1adir\"));\n    })));\n  }\n\n}\n\nexport default Catalogo;","map":{"version":3,"sources":["C:/Users/Guido/Desktop/Git/e-commerce-site/Frontend/src/Catalogo.jsx"],"names":["React","Component","Producto","cartId","Catalogo","constructor","props","componentDidMount","state","catalogoCargado","response","fetch","method","setState","catalogo","json","i","lenght","cantidadEnCatalogo","productos","handleIncrement","producto","nuevosProductos","indice","indexOf","handleDecrement","cantidadActual","Math","max","onAddClick","id","titulo","ok","window","alert","render","map","prod"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Producto from \"./ProductoEnCatálogo\";\r\nimport cartId from \"./cartId\";\r\n\r\nclass Catalogo extends Component {\r\n  constructor(props) {\r\n    // llamar al constructor de la superclase\r\n    super(props);\r\n    // Inicializar el estado\r\n    this.state = {\r\n      productos: [],\r\n      catalogoCargado: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Catálogo</h4>\r\n        <div className=\"row\">\r\n          {this.state.productos.map((prod) => {\r\n            return (\r\n              <Producto\r\n                key={prod.id}\r\n                producto={prod}\r\n                onIncrement={this.handleIncrement}\r\n                onDecrement={this.handleDecrement}\r\n              >\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  /* Paso el parámetro así por ser un evento */\r\n                  onClick={() => this.onAddClick(prod)}\r\n                >\r\n                  Añadir\r\n                </button>\r\n              </Producto>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    if (!this.state.catalogoCargado) {\r\n      /* Obtener el Catálogo de Libros */\r\n      var response = await fetch(\"http://localhost:8080/catalog\", {\r\n        method: \"GET\",\r\n      });\r\n      this.setState({ catalogoCargado: true });\r\n\r\n      /* Actualizar la lista de productos */\r\n      var catalogo = await response.json();\r\n      for (let i = 0; i < catalogo.lenght; i++) {\r\n        catalogo[i].cantidadEnCatalogo = 0;\r\n      }\r\n      this.setState({ productos: catalogo });\r\n    }\r\n  };\r\n\r\n  handleIncrement = (producto) => {\r\n    let nuevosProductos = [...this.state.productos];\r\n    let indice = nuevosProductos.indexOf(producto);\r\n    nuevosProductos[indice].cantidadEnCatalogo += 1;\r\n    this.setState({ productos: nuevosProductos });\r\n  };\r\n\r\n  handleDecrement = (producto) => {\r\n    let nuevosProductos = [...this.state.productos];\r\n    let indice = nuevosProductos.indexOf(producto);\r\n    let cantidadActual = nuevosProductos[indice].cantidadEnCatalogo;\r\n    cantidadActual--;\r\n    nuevosProductos[indice].cantidadEnCatalogo = Math.max(0, cantidadActual);\r\n    this.setState({ productos: nuevosProductos });\r\n  };\r\n\r\n  onAddClick = async (producto) => {\r\n    /* Agregar el producto al carrito del usuario */\r\n    var response = await fetch(\r\n      `http://localhost:8080/addToCart?cartId=${cartId.id}&bookIsbn=${producto.titulo}&bookQuantity=${producto.cantidadEnCatalogo}`,\r\n      { method: \"GET\" }\r\n    );\r\n\r\n    if (response.ok) {\r\n      window.alert(\"El elemento fué agregado con éxito!\");\r\n      let nuevosProductos = [...this.state.productos];\r\n      let indice = nuevosProductos.indexOf(producto);\r\n      nuevosProductos[indice].cantidadEnCatalogo = 0;\r\n      this.setState({ productos: nuevosProductos });\r\n    } else {\r\n      window.alert(\"El elemento no pudo agregarse al carrito.\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default Catalogo;\r\n"]},"metadata":{},"sourceType":"module"}