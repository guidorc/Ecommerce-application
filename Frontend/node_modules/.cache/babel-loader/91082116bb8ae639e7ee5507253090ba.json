{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guido\\\\Desktop\\\\Git\\\\e-commerce-site\\\\Frontend\\\\src\\\\Catalogo.jsx\";\nimport React, { Component } from \"react\";\nimport Producto from \"./ProductoEnCatálogo\";\nimport cartId from \"./cartId\";\n\nclass Catalogo extends Component {\n  constructor(props) {\n    // llamar al constructor de la superclase\n    super(props); // Inicializar el estado\n\n    this.componentDidMount = async () => {\n      /* Obtener el Catálogo de Libros */\n      var response = await fetch(\"http://localhost:8080/catalog\", {\n        method: \"GET\"\n      });\n      /* Actualizar la lista de productos */\n\n      var catalogo = await response.json();\n      this.setState({\n        productos: catalogo\n      });\n    };\n\n    this.handleIncrement = producto => {\n      let nuevosProductos = [...this.state.productos];\n      let indice = nuevosProductos.indexOf(producto);\n      nuevosProductos[indice].cantidad++;\n      this.setState({\n        productos: nuevosProductos\n      });\n    };\n\n    this.handleDecrement = producto => {\n      let nuevosProductos = [...this.state.productos];\n      let indice = nuevosProductos.indexOf(producto);\n      let cantidadActual = nuevosProductos[indice].cantidad;\n      cantidadActual--;\n      nuevosProductos[indice].cantidad = Math.max(0, cantidadActual);\n      this.setState({\n        productos: nuevosProductos\n      });\n    };\n\n    this.onAddClick = producto => {\n      console.log(cartId.id);\n      console.log(producto);\n      /*var response = await fetch(\r\n        `http://localhost:8080/addToCart?cartId=${cartId.id}&bookIsbn=${producto.titulo}&bookQuantity=${producto.cantidad}`,\r\n        { method: \"GET\" }\r\n      );*/\n    };\n\n    this.state = {\n      productos: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"Cat\\xE1logo\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, this.state.productos.map(prod => {\n      return /*#__PURE__*/React.createElement(Producto, {\n        key: prod.id,\n        producto: prod,\n        onIncrement: this.handleIncrement,\n        onDecrement: this.handleDecrement,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: this.onAddClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, \"A\\xF1adir\"));\n    })));\n  }\n\n}\n\nexport default Catalogo;","map":{"version":3,"sources":["C:/Users/Guido/Desktop/Git/e-commerce-site/Frontend/src/Catalogo.jsx"],"names":["React","Component","Producto","cartId","Catalogo","constructor","props","componentDidMount","response","fetch","method","catalogo","json","setState","productos","handleIncrement","producto","nuevosProductos","state","indice","indexOf","cantidad","handleDecrement","cantidadActual","Math","max","onAddClick","console","log","id","render","map","prod"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,UAAMA,KAAN,EAFiB,CAGjB;;AAHiB,SAiCnBC,iBAjCmB,GAiCC,YAAY;AAC9B;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkC;AAC1DC,QAAAA,MAAM,EAAE;AADkD,OAAlC,CAA1B;AAIA;;AACA,UAAIC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEH;AAAb,OAAd;AACD,KA1CkB;;AAAA,SA4CnBI,eA5CmB,GA4CAC,QAAD,IAAc;AAC9B,UAAIC,eAAe,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWJ,SAAf,CAAtB;AACA,UAAIK,MAAM,GAAGF,eAAe,CAACG,OAAhB,CAAwBJ,QAAxB,CAAb;AACAC,MAAAA,eAAe,CAACE,MAAD,CAAf,CAAwBE,QAAxB;AACA,WAAKR,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEG;AAAb,OAAd;AACD,KAjDkB;;AAAA,SAmDnBK,eAnDmB,GAmDAN,QAAD,IAAc;AAC9B,UAAIC,eAAe,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWJ,SAAf,CAAtB;AACA,UAAIK,MAAM,GAAGF,eAAe,CAACG,OAAhB,CAAwBJ,QAAxB,CAAb;AACA,UAAIO,cAAc,GAAGN,eAAe,CAACE,MAAD,CAAf,CAAwBE,QAA7C;AACAE,MAAAA,cAAc;AACdN,MAAAA,eAAe,CAACE,MAAD,CAAf,CAAwBE,QAAxB,GAAmCG,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYF,cAAZ,CAAnC;AACA,WAAKV,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEG;AAAb,OAAd;AACD,KA1DkB;;AAAA,SA4DnBS,UA5DmB,GA4DLV,QAAD,IAAc;AACzBW,MAAAA,OAAO,CAACC,GAAR,CAAYzB,MAAM,CAAC0B,EAAnB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACA;AACJ;AACA;AACA;AACG,KAnEkB;;AAIjB,SAAKE,KAAL,GAAa;AACXJ,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,KAAL,CAAWJ,SAAX,CAAqBiB,GAArB,CAA0BC,IAAD,IAAU;AAClC,0BACE,oBAAC,QAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAACH,EADZ;AAEE,QAAA,QAAQ,EAAEG,IAFZ;AAGE,QAAA,WAAW,EAAE,KAAKjB,eAHpB;AAIE,QAAA,WAAW,EAAE,KAAKO,eAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAME;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,KAAKI,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,CADF;AAYD,KAbA,CADH,CAFF,CADF;AAqBD;;AAhC8B;;AAuEjC,eAAetB,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Producto from \"./ProductoEnCatálogo\";\r\nimport cartId from \"./cartId\";\r\n\r\nclass Catalogo extends Component {\r\n  constructor(props) {\r\n    // llamar al constructor de la superclase\r\n    super(props);\r\n    // Inicializar el estado\r\n    this.state = {\r\n      productos: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Catálogo</h4>\r\n        <div className=\"row\">\r\n          {this.state.productos.map((prod) => {\r\n            return (\r\n              <Producto\r\n                key={prod.id}\r\n                producto={prod}\r\n                onIncrement={this.handleIncrement}\r\n                onDecrement={this.handleDecrement}\r\n              >\r\n                <button className=\"btn btn-primary\" onClick={this.onAddClick}>\r\n                  Añadir\r\n                </button>\r\n              </Producto>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    /* Obtener el Catálogo de Libros */\r\n    var response = await fetch(\"http://localhost:8080/catalog\", {\r\n      method: \"GET\",\r\n    });\r\n\r\n    /* Actualizar la lista de productos */\r\n    var catalogo = await response.json();\r\n    this.setState({ productos: catalogo });\r\n  };\r\n\r\n  handleIncrement = (producto) => {\r\n    let nuevosProductos = [...this.state.productos];\r\n    let indice = nuevosProductos.indexOf(producto);\r\n    nuevosProductos[indice].cantidad++;\r\n    this.setState({ productos: nuevosProductos });\r\n  };\r\n\r\n  handleDecrement = (producto) => {\r\n    let nuevosProductos = [...this.state.productos];\r\n    let indice = nuevosProductos.indexOf(producto);\r\n    let cantidadActual = nuevosProductos[indice].cantidad;\r\n    cantidadActual--;\r\n    nuevosProductos[indice].cantidad = Math.max(0, cantidadActual);\r\n    this.setState({ productos: nuevosProductos });\r\n  };\r\n\r\n  onAddClick = (producto) => {\r\n    console.log(cartId.id);\r\n    console.log(producto);\r\n    /*var response = await fetch(\r\n      `http://localhost:8080/addToCart?cartId=${cartId.id}&bookIsbn=${producto.titulo}&bookQuantity=${producto.cantidad}`,\r\n      { method: \"GET\" }\r\n    );*/\r\n  };\r\n}\r\n\r\nexport default Catalogo;\r\n"]},"metadata":{},"sourceType":"module"}